{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @description A module for parsing ISO8601 durations\n */\n\n/**\n * The pattern used for parsing ISO8601 duration (PnYnMnDTnHnMnS).\n * This does not cover the week format PnW.\n */\n// PnYnMnDTnHnMnS\n\nvar numbers = '\\\\d+(?:[\\\\.,]\\\\d+)?';\nvar weekPattern = '(' + numbers + 'W)';\nvar datePattern = '(' + numbers + 'Y)?(' + numbers + 'M)?(' + numbers + 'D)?';\nvar timePattern = 'T(' + numbers + 'H)?(' + numbers + 'M)?(' + numbers + 'S)?';\nvar iso8601 = 'P(?:' + weekPattern + '|' + datePattern + '(?:' + timePattern + ')?)';\nvar objMap = ['weeks', 'years', 'months', 'days', 'hours', 'minutes', 'seconds'];\nvar defaultDuration = Object.freeze({\n  years: 0,\n  months: 0,\n  weeks: 0,\n  days: 0,\n  hours: 0,\n  minutes: 0,\n  seconds: 0\n});\n/**\n * The ISO8601 regex for matching / testing durations\n */\n\nvar pattern = exports.pattern = new RegExp(iso8601);\n/** Parse PnYnMnDTnHnMnS format to object\n * @param {string} durationString - PnYnMnDTnHnMnS formatted string\n * @return {Object} - With a property for each part of the pattern\n */\n\nvar parse = exports.parse = function parse(durationString) {\n  // Slice away first entry in match-array\n  return durationString.match(pattern).slice(1).reduce(function (prev, next, idx) {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev;\n  }, {});\n};\n/**\n * Convert ISO8601 duration object to an end Date.\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting Date for calculating the duration\n * @return {Date} - The resulting end Date\n */\n\n\nvar end = exports.end = function end(duration, startDate) {\n  duration = Object.assign({}, defaultDuration, duration); // Create two equal timestamps, add duration to 'then' and return time difference\n\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var then = new Date(timestamp);\n  then.setFullYear(then.getFullYear() + duration.years);\n  then.setMonth(then.getMonth() + duration.months);\n  then.setDate(then.getDate() + duration.days);\n  then.setHours(then.getHours() + duration.hours);\n  then.setMinutes(then.getMinutes() + duration.minutes); // Then.setSeconds(then.getSeconds() + duration.seconds);\n\n  then.setMilliseconds(then.getMilliseconds() + duration.seconds * 1000); // Special case weeks\n\n  then.setDate(then.getDate() + duration.weeks * 7);\n  return then;\n};\n/**\n * Convert ISO8601 duration object to seconds\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting point for calculating the duration\n * @return {Number}\n */\n\n\nvar toSeconds = exports.toSeconds = function toSeconds(duration, startDate) {\n  duration = Object.assign({}, defaultDuration, duration);\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var now = new Date(timestamp);\n  var then = end(duration, now);\n  var seconds = (then.getTime() - now.getTime()) / 1000;\n  return seconds;\n};\n\nexports.default = {\n  end: end,\n  toSeconds: toSeconds,\n  pattern: pattern,\n  parse: parse\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","numbers","weekPattern","datePattern","timePattern","iso8601","objMap","defaultDuration","freeze","years","months","weeks","days","hours","minutes","seconds","pattern","RegExp","parse","durationString","match","slice","reduce","prev","next","idx","parseFloat","end","duration","startDate","assign","timestamp","getTime","Date","now","then","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setMilliseconds","getMilliseconds","toSeconds","default"],"sources":["/Users/ismaelmahamadou/Desktop/creact-intra/youtube/youtube-clone/node_modules/iso8601-duration/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @description A module for parsing ISO8601 durations\n */\n\n/**\n * The pattern used for parsing ISO8601 duration (PnYnMnDTnHnMnS).\n * This does not cover the week format PnW.\n */\n\n// PnYnMnDTnHnMnS\nvar numbers = '\\\\d+(?:[\\\\.,]\\\\d+)?';\nvar weekPattern = '(' + numbers + 'W)';\nvar datePattern = '(' + numbers + 'Y)?(' + numbers + 'M)?(' + numbers + 'D)?';\nvar timePattern = 'T(' + numbers + 'H)?(' + numbers + 'M)?(' + numbers + 'S)?';\n\nvar iso8601 = 'P(?:' + weekPattern + '|' + datePattern + '(?:' + timePattern + ')?)';\nvar objMap = ['weeks', 'years', 'months', 'days', 'hours', 'minutes', 'seconds'];\n\nvar defaultDuration = Object.freeze({\n  years: 0,\n  months: 0,\n  weeks: 0,\n  days: 0,\n  hours: 0,\n  minutes: 0,\n  seconds: 0\n});\n\n/**\n * The ISO8601 regex for matching / testing durations\n */\nvar pattern = exports.pattern = new RegExp(iso8601);\n\n/** Parse PnYnMnDTnHnMnS format to object\n * @param {string} durationString - PnYnMnDTnHnMnS formatted string\n * @return {Object} - With a property for each part of the pattern\n */\nvar parse = exports.parse = function parse(durationString) {\n  // Slice away first entry in match-array\n  return durationString.match(pattern).slice(1).reduce(function (prev, next, idx) {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev;\n  }, {});\n};\n\n/**\n * Convert ISO8601 duration object to an end Date.\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting Date for calculating the duration\n * @return {Date} - The resulting end Date\n */\nvar end = exports.end = function end(duration, startDate) {\n  duration = Object.assign({}, defaultDuration, duration);\n\n  // Create two equal timestamps, add duration to 'then' and return time difference\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var then = new Date(timestamp);\n\n  then.setFullYear(then.getFullYear() + duration.years);\n  then.setMonth(then.getMonth() + duration.months);\n  then.setDate(then.getDate() + duration.days);\n  then.setHours(then.getHours() + duration.hours);\n  then.setMinutes(then.getMinutes() + duration.minutes);\n  // Then.setSeconds(then.getSeconds() + duration.seconds);\n  then.setMilliseconds(then.getMilliseconds() + duration.seconds * 1000);\n  // Special case weeks\n  then.setDate(then.getDate() + duration.weeks * 7);\n\n  return then;\n};\n\n/**\n * Convert ISO8601 duration object to seconds\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting point for calculating the duration\n * @return {Number}\n */\nvar toSeconds = exports.toSeconds = function toSeconds(duration, startDate) {\n  duration = Object.assign({}, defaultDuration, duration);\n\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var now = new Date(timestamp);\n  var then = end(duration, now);\n\n  var seconds = (then.getTime() - now.getTime()) / 1000;\n  return seconds;\n};\n\nexports.default = {\n  end: end,\n  toSeconds: toSeconds,\n  pattern: pattern,\n  parse: parse\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}