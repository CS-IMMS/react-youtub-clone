{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelmahamadou/Desktop/creact-intra/youtube/youtube-clone/src/component/Videos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Row, Container, ListGroup } from 'react-bootstrap';\nimport SingleVideos from './SingleVideos';\nimport Suggetion from './Suggetion';\nimport Youtube from 'simple-youtube-api';\nimport Config from '../Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet youtube = '';\n\nfunction Videos(_ref) {\n  _s();\n\n  let {\n    searchString\n  } = _ref;\n  const [videoList, setVideoList] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState({});\n  const [error, setError] = useState(false);\n  youtube = new Youtube(Config.apiKey);\n  useEffect(() => {\n    const callApi = async () => {\n      const result = await youtube.searchVideos(searchString, 5);\n\n      if (result.length === 0) {\n        setError(true);\n      } else {\n        setError(false);\n      }\n\n      setSelectedVideo(result[0]);\n      setVideoList(result);\n    };\n\n    callApi();\n  }, [searchString]);\n\n  const selectedVideoCallback = videoDetail => {\n    setSelectedVideo(videoDetail);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 8,\n          children: [error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"desol\\xE9 \\uD83E\\uDD37\\u200D\\u2642\\uFE0F pas de resultat trouver \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(SingleVideos, {\n            detail: selectedVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }, this), selectedVideo.title ? selectedVideo.title : 'Loading....']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          lg: 4,\n          children: !error && /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Suggestion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Suggetion, {\n              videoList: videoList,\n              changeSelection: selectedVideoCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Videos, \"lOfxSjCxOccnfc9MzZUJITDAewQ=\");\n\n_c = Videos;\nexport default Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","Col","Row","Container","ListGroup","SingleVideos","Suggetion","Youtube","Config","youtube","Videos","searchString","videoList","setVideoList","selectedVideo","setSelectedVideo","error","setError","apiKey","callApi","result","searchVideos","length","selectedVideoCallback","videoDetail","title"],"sources":["/Users/ismaelmahamadou/Desktop/creact-intra/youtube/youtube-clone/src/component/Videos.jsx"],"sourcesContent":["import React,{ useState,useEffect } from 'react'\nimport { Col,Row,Container,ListGroup } from 'react-bootstrap'\nimport SingleVideos from './SingleVideos'\nimport Suggetion from './Suggetion'\nimport Youtube from 'simple-youtube-api'\nimport Config from '../Config'\nlet youtube ='';\n\n\nfunction Videos({searchString}) {\n    \n    const [videoList , setVideoList] = useState([ ]);\n    const [selectedVideo, setSelectedVideo] =useState({})\n    const [error, setError]= useState(false)\n\n    youtube = new Youtube(Config.apiKey);\n\n    useEffect(()=>{\n    const callApi = async () =>{\n        \n      const result = await  youtube.searchVideos(searchString, 5);\n      if(result.length === 0){\n        setError(true)\n      }else{\n        setError(false)\n      }\n      setSelectedVideo(result[0])\n      setVideoList(result)\n    }\n        callApi();\n\n\n    }, [searchString])\n\n    \n    const selectedVideoCallback = (videoDetail)=>{\n        setSelectedVideo(videoDetail)\n    }\n    return (\n        <>\n            \n            <Container>\n                <Row>\n                   \n                    <Col xs={12} lg={8} >\n                         {error ? <h1>desol√© ü§∑‚Äç‚ôÇÔ∏è pas de resultat trouver </h1> :\n                         ( <SingleVideos detail={selectedVideo}/>)\n                         }\n                    {selectedVideo.title ? selectedVideo.title : 'Loading....'}\n                       \n                    </Col>\n                    <Col xs={12} lg={4} >\n                        {!error && (\n                            <ListGroup>\n                            <p>Suggestion</p>\n                            <Suggetion videoList ={videoList} changeSelection ={selectedVideoCallback}/>\n                        </ListGroup>\n                        )}\n                        \n                        \n                    </Col>\n                </Row>\n            </Container>\n        \n        </>\n        \n    )\n}\n\nexport default Videos\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,GAAT,EAAaC,GAAb,EAAiBC,SAAjB,EAA2BC,SAA3B,QAA4C,iBAA5C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AACA,IAAIC,OAAO,GAAE,EAAb;;AAGA,SAASC,MAAT,OAAgC;EAAA;;EAAA,IAAhB;IAACC;EAAD,CAAgB;EAE5B,MAAM,CAACC,SAAD,EAAaC,YAAb,IAA6Bd,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAmChB,QAAQ,CAAC,EAAD,CAAjD;EACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAmBlB,QAAQ,CAAC,KAAD,CAAjC;EAEAU,OAAO,GAAG,IAAIF,OAAJ,CAAYC,MAAM,CAACU,MAAnB,CAAV;EAEAlB,SAAS,CAAC,MAAI;IACd,MAAMmB,OAAO,GAAG,YAAW;MAEzB,MAAMC,MAAM,GAAG,MAAOX,OAAO,CAACY,YAAR,CAAqBV,YAArB,EAAmC,CAAnC,CAAtB;;MACA,IAAGS,MAAM,CAACE,MAAP,KAAkB,CAArB,EAAuB;QACrBL,QAAQ,CAAC,IAAD,CAAR;MACD,CAFD,MAEK;QACHA,QAAQ,CAAC,KAAD,CAAR;MACD;;MACDF,gBAAgB,CAACK,MAAM,CAAC,CAAD,CAAP,CAAhB;MACAP,YAAY,CAACO,MAAD,CAAZ;IACD,CAVD;;IAWID,OAAO;EAGV,CAfQ,EAeN,CAACR,YAAD,CAfM,CAAT;;EAkBA,MAAMY,qBAAqB,GAAIC,WAAD,IAAe;IACzCT,gBAAgB,CAACS,WAAD,CAAhB;EACH,CAFD;;EAGA,oBACI;IAAA,uBAEI,QAAC,SAAD;MAAA,uBACI,QAAC,GAAD;QAAA,wBAEI,QAAC,GAAD;UAAK,EAAE,EAAE,EAAT;UAAa,EAAE,EAAE,CAAjB;UAAA,WACMR,KAAK,gBAAG;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAH,gBACJ,QAAC,YAAD;YAAc,MAAM,EAAEF;UAAtB;YAAA;YAAA;YAAA;UAAA,QAFP,EAICA,aAAa,CAACW,KAAd,GAAsBX,aAAa,CAACW,KAApC,GAA4C,aAJ7C;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eASI,QAAC,GAAD;UAAK,EAAE,EAAE,EAAT;UAAa,EAAE,EAAE,CAAjB;UAAA,UACK,CAACT,KAAD,iBACG,QAAC,SAAD;YAAA,wBACA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADA,eAEA,QAAC,SAAD;cAAW,SAAS,EAAGJ,SAAvB;cAAkC,eAAe,EAAGW;YAApD;cAAA;cAAA;cAAA;YAAA,QAFA;UAAA;YAAA;YAAA;YAAA;UAAA;QAFR;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAFJ,iBADJ;AA6BH;;GA1DQb,M;;KAAAA,M;AA4DT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}